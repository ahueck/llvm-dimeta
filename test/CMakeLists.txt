macro(pythonize_bool truth_var var)
  if(${truth_var})
    set(${var} True)
  else()
    set(${var} False)
  endif()
endmacro()

function(configure_dimeta_lit_site_cfg input output)
  set(LIT_SITE_CFG_IN_HEADER
      "## Autogenerated by Dimeta generation from ${input}\n## Do not edit!"
  )
  
  set(DIMETA_PROJECT_DIR ${PROJECT_SOURCE_DIR})
  set(DIMETA_LIBRARY_DIR ${CMAKE_BINARY_DIR}/lib)
  set(DIMETA_PASS_DIR ${DIMETA_LIBRARY_DIR}/pass)
  set(DIMETA_SCRIPT_DIR ${CMAKE_BINARY_DIR}/scripts)

  if(${LLVM_VERSION_MAJOR} VERSION_GREATER_EQUAL "13")
    set(DIMETA_OPT_ARGS "-enable-new-pm=0")
  endif()

  dimeta_target_generate_file(${input} ${output})
endfunction()

configure_dimeta_lit_site_cfg(
  ${CMAKE_CURRENT_SOURCE_DIR}/lit.site.cfg.in
  ${CMAKE_CURRENT_BINARY_DIR}/lit.site.cfg
)

add_lit_testsuite(lit-dimeta-test
  "Running the dimeta tests"
  ${CMAKE_CURRENT_SOURCE_DIR}
  ARGS -v -j 1
  PARAMS dimeta_site_config=${CMAKE_CURRENT_BINARY_DIR}/lit.site.cfg
)

dimeta_target_format(
  format-dimeta-tests "Formats project test files"
  TARGETS *.c *.cpp *.h
)

if(DIMETA_TEST_CONFIGURE_IDE)
  function(add_test_target_ide target header sources)
    add_executable(${target} EXCLUDE_FROM_ALL ${header} ${sources})

    target_include_directories(
      ${target} PRIVATE ${PROJECT_SOURCE_DIR}/lib/pass
                        ${PROJECT_SOURCE_DIR}/lib
                        ${PROJECT_SOURCE_DIR}
    )
  endfunction()

  file(GLOB_RECURSE DIMETA_CXX_TESTS CONFIGURE_DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
  file(GLOB_RECURSE DIMETA_CC_TESTS CONFIGURE_DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/*.c)
  file(GLOB_RECURSE DIMETA_TEST_HEADER CONFIGURE_DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

  add_test_target_ide(
    dimeta_cxx_test_objects "${DIMETA_TEST_HEADER}" "${DIMETA_CXX_TESTS}"
  )
  set_target_properties(dimeta_cxx_test_objects PROPERTIES LINKER_LANGUAGE CXX)

  add_test_target_ide(dimeta_cc_test_objects "${DIMETA_TEST_HEADER}" "${DIMETA_CC_TESTS}")
  set_target_properties(dimeta_cc_test_objects PROPERTIES LINKER_LANGUAGE C)
endif()
